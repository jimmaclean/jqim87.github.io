{"version":3,"sources":["webpack:///./src/pages/blog-index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/title.js","webpack:///./src/components/layouts/navigation.js","webpack:///./src/components/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_1__","_components_title__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","BlogIndex","_ref","edges","data","allMdx","a","createElement","pageName","map","edge","frontmatter","node","key","path","to","className","title","excerpt","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","customClass","GlobalNav","menuLinks","react_default","link","name","gatsby_browser_entry","activeClassName","Layout","_data$site$siteMetada","site","siteMetadata","description","Helmet_default","content","rel","href","type","navigation","_1814946776"],"mappings":"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","file":"component---src-pages-blog-index-js-84343a6259ef5a583b22.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/layouts/layout\";\r\nimport Title from \"../components/title\";\r\nimport { graphql, Link } from \"gatsby\";\r\n\r\nconst BlogIndex = ({ data }) => {\r\n  const { edges } = data.allMdx;\r\n  return (\r\n    <Layout>\r\n      <Title pageName=\"Blog\" />\r\n      <ul>\r\n        {edges.map(edge => {\r\n          const { frontmatter } = edge.node;\r\n          return (\r\n            <li key={frontmatter.path}>\r\n              <Link to={frontmatter.path}>\r\n                <h3 className=\"m-0\">{frontmatter.title}</h3>\r\n                <p>{frontmatter.excerpt}</p>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(sort: { order: ASC, fields: frontmatter___date }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date\r\n            path\r\n            title\r\n            excerpt\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogIndex;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nexport default props => (\r\n  <React.Fragment>\r\n    <Helmet>\r\n      <title>{props.pageName}</title>\r\n    </Helmet>\r\n    <h1 className={props.customClass}>{props.pageName}</h1>\r\n  </React.Fragment>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst GlobalNav = ({ menuLinks }) => {\r\n  return (\r\n    <nav className=\"wrap\">\r\n      <ul>\r\n        {menuLinks.map(link => (\r\n          <li key={link.name}>\r\n            <Link to={link.link} activeClassName=\"active\">\r\n              {link.name}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default GlobalNav;\r\n","import React from \"react\";\r\nimport \"../main.scss\";\r\nimport Helmet from \"react-helmet\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport GlobalNav from \"./navigation\";\r\n\r\nconst query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        description\r\n        title\r\n        menuLinks {\r\n          name\r\n          link\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <StaticQuery\r\n      query={query}\r\n      render={data => {\r\n        const { title, description, menuLinks } = data.site.siteMetadata;\r\n\r\n        return (\r\n          <React.Fragment>\r\n            <Helmet>\r\n              <title>{title}</title>\r\n              <meta name=\"description\" content={description} />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"//fonts.googleapis.com/css?family=Oxygen|Radley\"\r\n                type=\"text/css\"\r\n              />\r\n            </Helmet>\r\n\r\n            <GlobalNav menuLinks={menuLinks} />\r\n\r\n            <div className=\"wrap\">{children}</div>\r\n          </React.Fragment>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}