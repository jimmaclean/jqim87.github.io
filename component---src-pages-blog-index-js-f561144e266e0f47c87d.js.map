{"version":3,"sources":["webpack:///./src/pages/blog-index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/title.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_title__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","BlogIndex","_ref","edges","data","allMdx","a","createElement","pageName","map","edge","frontmatter","node","key","path","to","title","excerpt","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","pathname","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","GlobalNav","menuLinks","react_default","className","link","name","gatsby_browser_entry","activeClassName","Layout","_data$site$siteMetada","site","siteMetadata","description","Helmet_default","content","rel","href","type","navigation","_827531976"],"mappings":"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","file":"component---src-pages-blog-index-js-f561144e266e0f47c87d.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Title from \"../components/title\"\r\nimport {graphql, Link} from \"gatsby\"\r\n\r\n\r\nconst BlogIndex = ({data}) => {\r\n\r\n    const {edges} = data.allMdx;\r\n    return (\r\n        <Layout>\r\n            <Title pageName=\"Blog\" />\r\n        <ul>\r\n            {edges.map(\r\n                edge => {\r\n                    const {frontmatter} = edge.node\r\n                    return (\r\n                        <li key={frontmatter.path}>\r\n                            <Link to={frontmatter.path}>\r\n                                <h4>{frontmatter.title}</h4>\r\n                                <p>{frontmatter.excerpt}</p>\r\n                            </Link>\r\n                        </li>\r\n                    ) \r\n                    \r\n                }\r\n            )}\r\n        </ul>\r\n\r\n        </Layout>\r\n    )\r\n}\r\nexport const query = graphql`\r\n    query {\r\n        allMdx(sort: {order: ASC, fields: frontmatter___date}){\r\n            edges {\r\n            node {\r\n                frontmatter {\r\n                    date\r\n                    path\r\n                    title\r\n                    excerpt\r\n                }\r\n            }\r\n            }\r\n        }\r\n    }\r\n  \r\n`\r\n\r\nexport default BlogIndex","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport Helmet from 'react-helmet'\r\n\r\nexport default (props) =>\r\n<React.Fragment>\r\n    <Helmet>\r\n        <title>{props.pageName}</title>\r\n    </Helmet>\r\n    <h1>{props.pageName}</h1>\r\n</React.Fragment>","import React from 'react'\r\nimport {Link} from 'gatsby'\r\n\r\nconst GlobalNav = ({menuLinks}) => {\r\n\r\n    return (\r\n        <nav className=\"wrap\">\r\n            <ul>\r\n                {menuLinks.map(link => (\r\n                    <li key={link.name}>\r\n                        <Link to={link.link} activeClassName=\"active\">\r\n                            {link.name}\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default GlobalNav\r\n","import React from \"react\"\r\nimport \"./layout.scss\"\r\nimport Helmet from 'react-helmet';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport GlobalNav from \"../components/navigation\"\r\n\r\n\r\nconst query = graphql`\r\nquery {\r\n    site {\r\n        siteMetadata {\r\n            description\r\n            title\r\n            menuLinks {\r\n                name\r\n                link\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n    return  (\r\n        <StaticQuery \r\n        query= {query}\r\n        render = {data => {\r\n            const {title, description, menuLinks} = data.site.siteMetadata;\r\n            \r\n            return (\r\n                <React.Fragment>\r\n            \r\n                    <Helmet>\r\n                        <title>{title}</title>\r\n                        <meta name=\"description\" content={description}/>\r\n                        <link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Oxygen|Radley\" type=\"text/css\" />\r\n                    </Helmet>\r\n\r\n                    <GlobalNav menuLinks={menuLinks} />\r\n\r\n                    <div className=\"wrap\">\r\n                        {children} \r\n                    </div>\r\n\r\n                </React.Fragment>\r\n                \r\n            )}\r\n        }/>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Layout"],"sourceRoot":""}