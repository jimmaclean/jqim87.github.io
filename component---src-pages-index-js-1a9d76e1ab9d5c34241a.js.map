{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/title.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_title__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","Index","_ref","edges","data","allMdx","a","createElement","pageName","className","href","target","rel","map","edge","frontmatter","node","key","path","to","title","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","Fragment","GlobalNav","menuLinks","react_default","link","name","gatsby_browser_entry","activeClassName","Layout","_data$site$siteMetada","site","siteMetadata","description","Helmet_default","content","type","navigation","_827531976"],"mappings":"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","file":"component---src-pages-index-js-1a9d76e1ab9d5c34241a.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Title from \"../components/title\"\r\nimport { graphql, Link } from \"gatsby\";\r\n\r\n\r\nconst Index = ({data}) => {\r\n    const {edges} = data.allMdx;\r\n\r\n    return (\r\n    <Layout>\r\n        <Title pageName=\"James Maclean\"/>\r\n    \r\n        <h4 className=\"subtitle\">BA Graphic Design, MA User Experience Design</h4>\r\n        <p>Freelance frontend developer with extensive UI/UX experience.</p>\r\n        <ul>\r\n            <li>\r\n                <a href=\"https://www.linkedin.com/in/jamesmacleanjqim\" target=\"_blank\"  rel=\"noopener noreferrer\">LinkedIn</a>\r\n            </li>\r\n            <li>\r\n                <a href=\"https://codepen.io/jqim\" target=\"_blank\"  rel=\"noopener noreferrer\">Codepen</a>\r\n            </li>\r\n            <li>\r\n                <a href=\"https://github.com/jimmaclean\" target=\"_blank\"  rel=\"noopener noreferrer\">GitHub</a>\r\n            </li>\r\n        </ul>\r\n        <h3>Latest blog posts</h3>\r\n        <ul>\r\n            {edges.map(\r\n                edge => {\r\n                    const {frontmatter} = edge.node\r\n                    return (\r\n                        <li key={frontmatter.path}>\r\n                            <Link to={frontmatter.path}>{frontmatter.title}</Link>\r\n                        </li>\r\n                    ) \r\n                    \r\n                }\r\n            )}\r\n        </ul>\r\n    \r\n    </Layout>\r\n    )\r\n} \r\n\r\nexport const query = graphql`\r\n    query {\r\n        allMdx(sort: {order: ASC, fields: frontmatter___date}){\r\n            edges {\r\n            node {\r\n                frontmatter {\r\n                    date\r\n                    path\r\n                    title\r\n                }\r\n            }\r\n            }\r\n        }\r\n    }\r\n  \r\n`\r\nexport default Index\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport Helmet from 'react-helmet'\r\n\r\nexport default (props) =>\r\n<React.Fragment>\r\n    <Helmet>\r\n        <title>{props.pageName}</title>\r\n    </Helmet>\r\n    <h1>{props.pageName}</h1>\r\n</React.Fragment>","import React from 'react'\r\nimport {Link} from 'gatsby'\r\n\r\nconst GlobalNav = ({menuLinks}) => {\r\n\r\n    return (\r\n        <nav className=\"wrap\">\r\n            <ul>\r\n                {menuLinks.map(link => (\r\n                    <li key={link.name}>\r\n                        <Link to={link.link} activeClassName=\"active\">\r\n                            {link.name}\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default GlobalNav\r\n","import React from \"react\"\r\nimport \"./layout.scss\"\r\nimport Helmet from 'react-helmet';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport GlobalNav from \"../components/navigation\"\r\n\r\n\r\nconst query = graphql`\r\nquery {\r\n    site {\r\n        siteMetadata {\r\n            description\r\n            title\r\n            menuLinks {\r\n                name\r\n                link\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n    return  (\r\n        <StaticQuery \r\n        query= {query}\r\n        render = {data => {\r\n            const {title, description, menuLinks} = data.site.siteMetadata;\r\n            \r\n            return (\r\n                <React.Fragment>\r\n            \r\n                    <Helmet>\r\n                        <title>{title}</title>\r\n                        <meta name=\"description\" content={description}/>\r\n                        <link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Oxygen|Radley\" type=\"text/css\" />\r\n                    </Helmet>\r\n\r\n                    <GlobalNav menuLinks={menuLinks} />\r\n\r\n                    <div className=\"wrap\">\r\n                        {children} \r\n                    </div>\r\n\r\n                </React.Fragment>\r\n                \r\n            )}\r\n        }/>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Layout"],"sourceRoot":""}